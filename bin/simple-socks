#!/usr/bin/env node

'use strict';

var socks5 = require('../lib/socks5'),
    program = require('commander'),
    Manager = require('autostart-manager'),
    pkg = require('../package.json');

var KEY = 'simple-socks',
    action = false

program
    .version(pkg.version)
    .option('-p, --port <int>', 'Port of proxy server')
    .option('-h, --host <string>', 'Host')

var oldOutputHelp = program.outputHelp;
program.outputHelp = function(){
    action = true
    oldOutputHelp.apply(this, arguments)
}

program
    .command('start')
    .description('Run SOCKS5 proxy server')
    .action(function (env, options) {
        action = true
        var port = program.port || 1080,
            host = program.host || 'localhost';
        socks5.createServer().listen(port, host, function () {
            console.log('SOCKS5 proxy server started on ' + host + ':' + port)
        })
    });


program
    .command('enable-autostart')
    .description('Add server to autostart')
    .action(function (env, options) {
        action = true
        var port = program.port || 1080,
            host = program.host || 'localhost';
        var manager = new Manager({
            name: 'simple-socks',
            args: ['start', '--port', port, '--host', host]
        })
        manager.enable()
    });

program
    .command('disable-autostart')
    .description('Remove this server from autostart')
    .action(function (env, options) {
        action = true
        var manager = new Manager({
            name: 'simple-socks'
        })
        manager.disable()
    });

//TODO add method autostart-status

program
    .command('*')
    .action(function () {
        console.log("sdf")
        program.outputHelp();
    })

program.parse(process.argv);

if (!action) program.outputHelp();